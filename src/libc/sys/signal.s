	.globl	_errno
	.comm	_errno,2
	.comm	Lsigvec,0x42
	.globl	_signal
_signal:
	push	bp
	mov	bp,sp
	mov	cx,#22
	mov	ax,*4(bp)
	or	ax,ax
	jng	L005
	cmp	ax,#32
	jg	L005
	mov	cx,ax
	sal	ax,*1
	add	ax,#Lsigvec
	mov	bx,ax
	push	(bx)
	mov	ax,*6(bp)
	mov	(bx),ax
	cmp	ax,#2
	jl	L000
	mov	ax,#6			| 6 byte trampolines
	mul	cx
	add	ax,#Lsig1-6		| bias to 1 based -- this seems weird to me
L000:
	mov	dx,ax
	mov	ax,cx
	mov	bx,#48
	int	0xf1
	cmp	ax,#2
	jl	L001
	pop	ax
	j	L002
L001:
	pop	bx
L002:
	jcxz	L010
L005:
	mov	_errno,cx
	mov	ax,#-1
L010:
	pop	bp
	ret
Lsig1:
	push	ax
	mov	ax,#Lsigvec+2
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+4
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+6
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+8
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+10
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+12
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+14
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+16
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+18
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+20
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+22
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+24
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+26
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+28
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+30
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+32
	j	Lcomx
	push	ax
	mov	ax,#Lsigvec+34
Lcomx:
	j	Lcom
	push	ax
	mov	ax,#Lsigvec+36
	j	Lcom
	push	ax
	mov	ax,#Lsigvec+38
	j	Lcom
	push	ax
	mov	ax,#Lsigvec+40
	j	Lcom
	push	ax
	mov	ax,#Lsigvec+42
	j	Lcom
	push	ax
	mov	ax,#Lsigvec+44
	j	Lcom
	push	ax
	mov	ax,#Lsigvec+46
	j	Lcom
	push	ax
	mov	ax,#Lsigvec+48
	j	Lcom
	push	ax
	mov	ax,#Lsigvec+50
	j	Lcom
	push	ax
	mov	ax,#Lsigvec+52
	j	Lcom
	push	ax
	mov	ax,#Lsigvec+54
	j	Lcom
	push	ax
	mov	ax,#Lsigvec+56
	j	Lcom
	push	ax
	mov	ax,#Lsigvec+58
	j	Lcom
	push	ax
	mov	ax,#Lsigvec+60
	j	Lcom
	push	ax
	mov	ax,#Lsigvec+62
	j	Lcom
	push	ax
	mov	ax,#Lsigvec+64
Lcom:
	push	bx
	push	cx
	push	dx
	mov	bx,ax
	sub	ax,#Lsigvec
	shr	ax,*1
	push	ax
	mov	ax,(bx)
	call	@ax
	pop	bx
	pop	dx
	pop	cx
	pop	bx
	pop	ax
	popf
	ret
