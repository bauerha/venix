_main:		push	bp
_main+1:	mov	bp,sp
_main+3:	push	si
_main+4:	push	di
_main+5:	mov	0,#0
_main+b:	mov	ax,#1ff
_main+e:	mov	cx,#9
_main+11:	shr	ax,cl
_main+13:	mov	dx,*4(bp)
_main+16:	add	dx,*1f
_main+19:	mov	cx,#5
_main+1c:	shr	dx,cl
_main+1e:	add	ax,dx
_main+20:	inc	ax
_main+21:	inc	ax
_main+22:	mov	di,ax
_main+24:	mov	ax,#0
_main+27:	push	ax
_main+28:	call	0
_main+2b:	pop	cx
_main+2c:	mov	ax,#1f2
_main+2f:	push	ax
_main+30:	call	0
_main+33:	pop	cx
_main+34:	mov	ax,di
_main+36:	xor	dx,dx
_main+38:	mov	cx,#2
_main+3b:
data address not found
_main+3d:	mov	dx,*6(bp)
_main+40:	sub	dx,ax
_main+42:	push	dx
_main+43:	push	*6(bp)
_main+46:	mov	ax,#0
_main+49:	push	ax
_main+4a:	call	0
_main+4d:	add	sp,*6
_main+50:	mov	ax,*6(bp)
_main+53:	mov	dx,#2
_main+56:
data address not found
_main+58:	mov	*6(bp),ax
_main+5b:	sub	ax,di
_main+5d:	mov	si,ax
_main+5f:	push	di
_main+60:	push	si
_main+61:	mov	ax,#0
_main+64:	push	ax
_main+65:	call	0
_main+68:	add	sp,*6
_main+6b:	mov	0,si
_main+6f:	mov	si,*6(bp)
_main+72:	cmp	si,di
_main+74:	jbe	_main+85
_main+76:	dec	si
_main+77:	mov	ax,si
_main+79:	mov	cx,#5
_main+7c:	shl	ax,cl
_main+7e:	push	ax
_main+7f:	call	0
_main+82:	pop	cx
_main+83:	j	_main+72
_main+85:	lea	ax,*-2(di)
_main+88:	mov	cx,#5
_main+8b:	shl	ax,cl
_main+8d:	mov	c,ax
_main+90:	mov	e,#2
_main+96:	movb	2,*3
_main+9b:	or	0,#6000
_main+a1:	mov	76,#0
_main+a7:	call	0
_main+aa:	call	0
_main+ad:	call	0
_main+b0:	call	0
_main+b3:	mov	ax,#1
_main+b6:	push	ax
_main+b7:	push	0
_main+bb:	call	0
_main+be:	add	sp,*4
_main+c1:	mov	0,ax
_main+c4:	mov	bx,ax
_main+c6:	andb	(bx),*fe
_main+c9:	mov	ax,#1
_main+cc:	push	ax
_main+cd:	push	0
_main+d1:	call	0
_main+d4:	add	sp,*4
_main+d7:	mov	80,ax
_main+da:	mov	bx,ax
_main+dc:	andb	(bx),*fe
_main+df:	mov	e,#ffff
_main+e5:	mov	bx,2
_main+e9:	mov	bx,*14(bx)
_main+ec:	push	#1fc(bx)
_main+f0:	mov	ax,#236
_main+f3:	push	ax
_main+f4:	call	0
_main+f7:	add	sp,*4
_main+fa:	cmp	0,*0
ff:		jne	13d
101:		mov	bx,2
105:		mov	bx,*14(bx)
108:		mov	ax,*2(bx)
10b:		mov	0,ax
10e:		mov	0,#0
114:		mov	ax,0
117:		add	ax,0
11b:		add	ax,#31
11e:		push	ax
11f:		push	0
123:		call	0
126:		add	sp,*4
129:		mov	di,ax
12b:		push	di
12c:		call	0
12f:		pop	cx
130:
data address not found
132:		addb	al,*0
134:		jne	13d
136:		add	0,*32
13b:		j	114
13d:		push	0
141:		push	0
145:		mov	ax,#0
148:		push	ax
149:		call	0
14c:		add	sp,*6
14f:		call	0
152:		or	ax,ax
154:		je	186
156:		mov	ax,#82
159:		push	ax
15a:		call	0
15d:		pop	cx
15e:		mov	bx,76
162:		mov	*18(bx),#8
167:		mov	bx,76
16b:		mov	*16(bx),#82
170:		mov	ax,#0
173:		sub	ax,#0
176:		push	ax
177:		xor	ax,ax
179:		push	ax
17a:		mov	ax,#0
17d:		push	ax
17e:		call	0
181:		add	sp,*6
184:		j	189
186:		call	0
189:		pop	di
18a:		pop	si
18b:		pop	bp
18c:		ret
_sureg:
_sureg:		push	bp
_sureg+1:	mov	bp,sp
_sureg+3:	push	si
_sureg+4:	push	di
_sureg+5:	mov	di,76
_sureg+9:	mov	ax,#2
_sureg+c:	mov	cx,#5
_sureg+f:	shl	ax,cl
_sureg+11:	add	ax,*12(di)
_sureg+14:	mov	6,ax
_sureg+17:	mov	si,*20(di)
_sureg+1a:	or	si,si
_sureg+1c:	jne	_sureg+26
_sureg+1e:	mov	ax,6
_sureg+21:	mov	4,ax
_sureg+24:	j	_sureg+2c
_sureg+26:	mov	ax,*6(si)
_sureg+29:	mov	4,ax
_sureg+2c:	mov	ax,c
_sureg+2f:	add	6,ax
_sureg+33:	mov	ax,a
_sureg+36:	add	4,ax
_sureg+3a:	mov	si,*22(di)
_sureg+3d:	or	si,si
_sureg+3f:	je	_sureg+4c
_sureg+41:	mov	ax,e
_sureg+44:	add	ax,*6(si)
_sureg+47:	mov	8,ax
_sureg+4a:	j	_sureg+61
_sureg+4c:	cmp	e,*ff
_sureg+51:	jne	_sureg+5b
_sureg+53:	mov	ax,6
_sureg+56:	mov	8,ax
_sureg+59:	j	_sureg+61
_sureg+5b:	mov	ax,e
_sureg+5e:	mov	8,ax
_sureg+61:	pop	di
_sureg+62:	pop	si
_sureg+63:	pop	bp
_sureg+64:	ret
