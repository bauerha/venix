_readi:		push	bp
_readi+1:	mov	bp,sp
_readi+3:	push	si
_readi+4:	push	di
_readi+5:	sub	sp,*a
_readi+8:	mov	di,*4(bp)
_readi+b:	cmp	7a,*0
_readi+10:	je	_readi+33
_readi+12:	orb	(di),*4
_readi+15:	mov	ax,*6(di)
_readi+18:	and	ax,#6000
_readi+1b:	cmp	ax,#2000
_readi+1e:	jne	_readi+36
_readi+20:	push	*14(di)
_readi+23:	movb	al,*15(di)
_readi+26:	cbw
_readi+27:	mov	dx,#a
_readi+2a:	imul	dx
_readi+2c:	mov	bx,ax
_readi+2e:	call	#4(bx)
_readi+32:	pop	cx
_readi+33:	jmp	15d
_readi+36:	mov	ax,#fff7
_readi+39:	push	ax
_readi+3a:	mov	ax,#7c
_readi+3d:	push	ax
_readi+3e:	call	0
_readi+41:	add	sp,*4
_readi+44:	mov	*-8(bp),ax
_readi+47:	mov	*-6(bp),ax
_readi+4a:	mov	ax,7e
_readi+4d:	and	ax,#1ff
_readi+50:	mov	*-10(bp),ax
_readi+53:	mov	ax,#200
_readi+56:	sub	ax,*-10(bp)
_readi+59:	mov	*-14(bp),ax
_readi+5c:	cmp	ax,7a
_readi+60:	jbe	_readi+68
_readi+62:	mov	ax,7a
_readi+65:	mov	*-14(bp),ax
_readi+68:	mov	ax,*6(di)
_readi+6b:	and	ax,#6000
_readi+6e:	cmp	ax,#6000
_readi+71:	je	_readi+bc
_readi+73:	push	7e
_readi+77:	push	7c
_readi+7b:	push	*12(di)
_readi+7e:	movb	al,*11(di)
_readi+81:	and	ax,#ff
_readi+84:	push	ax
_readi+85:	call	0
_readi+88:	add	sp,*8
_readi+8b:	mov	*-12(bp),ax
_readi+8e:	or	ax,ax
_readi+90:	je	_readi+af
_readi+92:	mov	ax,*-14(bp)
_readi+95:	cmp	ax,*-12(bp)
_readi+98:	jbe	_readi+a0
_readi+9a:	mov	ax,*-12(bp)
_readi+9d:	mov	*-14(bp),ax
_readi+a0:	push	*-6(bp)
_readi+a3:	push	di
_readi+a4:	call	0
_readi+a7:	add	sp,*4
_readi+aa:	mov	*-8(bp),ax
_readi+ad:	or	ax,ax
_readi+af:	jne	_readi+b4
_readi+b1:	jmp	152
_readi+b4:	mov	ax,*2(di)
_readi+b7:	mov	*-12(bp),ax
_readi+ba:	j	_readi+c9
_readi+bc:	mov	ax,*14(di)
_readi+bf:	mov	*-12(bp),ax
_readi+c2:	mov	ax,*-8(bp)
_readi+c5:	inc	ax
_readi+c6:	mov	0,ax
_readi+c9:	mov	ax,*30(di)
_readi+cc:	inc	ax
_readi+cd:	cmp	ax,*-6(bp)
_readi+d0:	jne	_readi+e6
_readi+d2:	push	0
_readi+d6:	push	*-8(bp)
_readi+d9:	push	*-12(bp)
_readi+dc:	call	0
_readi+df:	add	sp,*6
_readi+e2:	mov	si,ax
_readi+e4:	j	_readi+f4
_readi+e6:	push	*-8(bp)
_readi+e9:	push	*-12(bp)
_readi+ec:	call	0
_readi+ef:	add	sp,*4
_readi+f2:	mov	si,ax
_readi+f4:	mov	ax,*-6(bp)
_readi+f7:	mov	*30(di),ax
_readi+fa:	cmp	*20(si),*0
_readi+fe:	je	116
100:		add	*20(si),#100
105:		shl	*20(si)
108:		mov	ax,*20(si)
10b:		cmp	ax,*-14(bp)
10e:		jnb	116
110:		mov	ax,*20(si)
113:		mov	*-14(bp),ax
116:		mov	ax,#1
119:		push	ax
11a:		push	*-14(bp)
11d:		push	*-10(bp)
120:		push	si
121:		call	_iomove
124:		add	sp,*8
127:		test	7e
12b:		inc	(bx+di)
12d:		jne	141
12f:		movb	al,(di)
131:		and	ax,#ff
134:		test	ax,#40
137:		je	13d
139:		and	(si),#fdff
13d:		or	(si),#80
141:		push	si
142:		call	0
145:		pop	cx
146:		cmpb	71,*0
14b:		jne	15d
14d:		cmp	7a,*0
152:		je	15d
154:		cmp	*-14(bp),*0
158:		je	15d
15a:		jmp	_readi+36
15d:		lea	sp,*-4(bp)
160:		pop	di
161:		pop	si
162:		pop	bp
163:		ret
_writei:
_writei:	push	bp
_writei+1:	mov	bp,sp
_writei+3:	push	si
_writei+4:	push	di
_writei+5:	sub	sp,*8
_writei+8:	mov	di,*4(bp)
_writei+b:	orb	(di),*6
_writei+e:	mov	ax,*6(di)
_writei+11:	and	ax,#6000
_writei+14:	cmp	ax,#2000
_writei+17:	jne	_writei+2f
_writei+19:	push	*14(di)
_writei+1c:	movb	al,*15(di)
_writei+1f:	cbw
_writei+20:	mov	dx,#a
_writei+23:	imul	dx
_writei+25:	mov	bx,ax
_writei+27:	call	#6(bx)
_writei+2b:	pop	cx
_writei+2c:	jmp	29f
_writei+2f:	cmp	7a,*0
_writei+34:	je	_writei+7f
_writei+36:	mov	ax,#fff7
_writei+39:	push	ax
_writei+3a:	mov	ax,#7c
_writei+3d:	push	ax
_writei+3e:	call	0
_writei+41:	add	sp,*4
_writei+44:	mov	*-12(bp),ax
_writei+47:	mov	ax,7e
_writei+4a:	and	ax,#1ff
_writei+4d:	mov	*-8(bp),ax
_writei+50:	mov	ax,#200
_writei+53:	sub	ax,*-8(bp)
_writei+56:	mov	*-6(bp),ax
_writei+59:	cmp	ax,7a
_writei+5d:	jbe	_writei+65
_writei+5f:	mov	ax,7a
_writei+62:	mov	*-6(bp),ax
_writei+65:	mov	ax,*6(di)
_writei+68:	and	ax,#6000
_writei+6b:	cmp	ax,#6000
_writei+6e:	je	_writei+8c
_writei+70:	push	*-12(bp)
_writei+73:	push	di
_writei+74:	call	0
_writei+77:	add	sp,*4
_writei+7a:	mov	*-12(bp),ax
_writei+7d:	or	ax,ax
_writei+7f:	jne	_writei+84
_writei+81:	jmp	29f
_writei+84:	mov	ax,*2(di)
_writei+87:	mov	*-10(bp),ax
_writei+8a:	j	_writei+92
_writei+8c:	mov	ax,*14(di)
_writei+8f:	mov	*-10(bp),ax
_writei+92:	cmp	*-6(bp),#200
_writei+97:	jne	_writei+a9
_writei+99:	push	*-12(bp)
_writei+9c:	push	*-10(bp)
_writei+9f:	call	0
_writei+a2:	add	sp,*4
_writei+a5:	mov	si,ax
_writei+a7:	j	_writei+b7
_writei+a9:	push	*-12(bp)
_writei+ac:	push	*-10(bp)
_writei+af:	call	0
_writei+b2:	add	sp,*4
_writei+b5:	mov	si,ax
_writei+b7:	xor	ax,ax
_writei+b9:	push	ax
_writei+ba:	push	*-6(bp)
_writei+bd:	push	*-8(bp)
_writei+c0:	push	si
_writei+c1:	call	_iomove
_writei+c4:	add	sp,*8
_writei+c7:	cmpb	71,*0
_writei+cc:	je	_writei+d5
_writei+ce:	push	si
_writei+cf:	call	0
_writei+d2:	pop	cx
_writei+d3:	j	_writei+f3
_writei+d5:	test	7e
_writei+d9:	inc	(bx+di)
_writei+db:	jne	_writei+ee
_writei+dd:	movb	al,(di)
_writei+df:	and	ax,#ff
_writei+e2:	test	ax,#40
_writei+e5:	jne	_writei+ee
_writei+e7:	push	si
_writei+e8:	call	0
_writei+eb:	pop	cx
_writei+ec:	j	_writei+f3
_writei+ee:	push	si
_writei+ef:	call	0
_writei+f2:	pop	cx
_writei+f3:	push	7e
_writei+f7:	push	7c
_writei+fb:	push	*12(di)
_writei+fe:	movb	al,*11(di)
265:		and	ax,#ff
268:		and	ax,#ff
26b:		push	ax
26c:		call	0
26f:		add	sp,*8
272:		or	ax,ax
274:		jnl	28b
276:		test	*6(di)
279:		addb	(bx+si),ah
27b:		jne	28b
27d:		mov	ax,7c
280:		mov	cx,ax
282:		movb	*11(di),cl
285:		mov	ax,7e
288:		mov	*12(di),ax
28b:		orb	(di),*2
28e:		cmpb	71,*0
293:		jne	29f
295:		cmp	7a,*0
29a:		je	29f
29c:		jmp	_writei+36
29f:		lea	sp,*-4(bp)
2a2:		pop	di
2a3:		pop	si
2a4:		pop	bp
2a5:		ret
_iomove:
_iomove:	push	bp
_iomove+1:	mov	bp,sp
_iomove+3:	push	si
_iomove+4:	push	di
_iomove+5:	push	cx
_iomove+6:	mov	si,*8(bp)
_iomove+9:	or	si,si
_iomove+b:	je	_iomove+4c
_iomove+d:	mov	bx,*4(bp)
_iomove+10:	mov	ax,*14(bx)
_iomove+13:	add	ax,*6(bp)
_iomove+16:	mov	di,ax
_iomove+18:	cmpb	70,*0
_iomove+1d:	jne	_iomove+63
_iomove+1f:	cmp	*10(bp),*0
_iomove+23:	jne	_iomove+35
_iomove+25:	push	si
_iomove+26:	push	di
_iomove+27:	push	78
_iomove+2b:	call	0
_iomove+2e:	add	sp,*6
_iomove+31:	mov	di,ax
_iomove+33:	j	_iomove+43
_iomove+35:	push	si
_iomove+36:	push	78
_iomove+3a:	push	di
_iomove+3b:	call	0
_iomove+3e:	add	sp,*6
_iomove+41:	mov	di,ax
_iomove+43:	or	di,di
_iomove+45:	je	_iomove+4e
_iomove+47:	movb	71,*e
_iomove+4c:	j	_iomove+61
_iomove+4e:	add	78,si
_iomove+52:	push	si
_iomove+53:	mov	ax,#7c
_iomove+56:	push	ax
_iomove+57:	call	0
_iomove+5a:	add	sp,*4
_iomove+5d:	sub	7a,si
_iomove+61:	j	_iomove+9c
_iomove+63:	cmp	*10(bp),*0
_iomove+67:	jne	_iomove+86
_iomove+69:	mov	ax,si
_iomove+6b:	dec	si
_iomove+6c:	or	ax,ax
_iomove+6e:	je	_iomove+9c
_iomove+70:	call	0
_iomove+73:	mov	*-6(bp),ax
_iomove+76:	or	ax,ax
_iomove+78:	jl	_iomove+9c
_iomove+7a:	mov	bx,di
_iomove+7c:	inc	di
_iomove+7d:	mov	ax,*-6(bp)
_iomove+80:	mov	cx,ax
_iomove+82:	movb	(bx),cl
_iomove+84:	j	_iomove+69
_iomove+86:	mov	ax,si
_iomove+88:	dec	si
_iomove+89:	or	ax,ax
_iomove+8b:	je	_iomove+9c
_iomove+8d:	mov	bx,di
_iomove+8f:	inc	di
_iomove+90:	movb	al,(bx)
_iomove+92:	cbw
_iomove+93:	push	ax
_iomove+94:	call	0
_iomove+97:	pop	cx
_iomove+98:	or	ax,ax
_iomove+9a:	jnl	_iomove+86
_iomove+9c:	pop	cx
_iomove+9d:	pop	di
_iomove+9e:	pop	si
_iomove+9f:	pop	bp
_iomove+a0:	ret
